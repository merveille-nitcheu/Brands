services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:v1
    container_name: backend
    volumes:
      - brand_storage:/var/www/storage/app/public
      - ./backend:/var/www
    depends_on:
      - database
    networks:
      - app-network


  nginx_brand:
    image: nginx:alpine
    container_name: nginx_brand
    ports:
      - "8082:80"
    volumes:
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf
      - brand_storage:/usr/share/nginx/html/storage
    depends_on:
      - backend
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend:v1
    container_name: frontend
    ports:
      - "3002:80"
    networks:
      - app-network

  database:
    image: mysql:8.0
    container_name: database
    environment:
      MYSQL_DATABASE: brands
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data_brands:/var/lib/mysql
    networks:
      - app-network

volumes:
  db_data_brands:
  brand_storage:

networks:
  app-network:
    driver: bridge